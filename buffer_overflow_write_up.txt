By using phrack.org to perform smashing the stack, I learned how to modify the return address using gdb to look at memory addresses. With my version of linux vm I had to disable address randomization. Unfortunately I did not perform a successful attack. Following the example in the document, I got stuck around testsc.c where there is an character array for the shellcode. The shellcode was crucial for the attack because it will be executed after modifying the return address. The shellcode contains addresses to spawn the shell but I cannot make the connection using the memory addresses from testsc.c.
If I had completed this step, the next approach would be to offset correctly so there are no errors when reaching the code. Then I would write the content to a file named 'badfile' where vuln.c will read it. Ideally this would spawn the shell where typing 'whoami' would result in root.